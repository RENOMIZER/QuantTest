<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMCAgIPBAQEJQYGBjcyKm/uNC1d/zQtXf80LV3/NC1d/zQtXf80LV3/NC1d/zQt
        Xf80LV3/NC1d/zQtXf80LV3/NC1d/zQtXf80LV3/NC1d/zQtXf80LV3/Myl05gUFBTUCAgIWAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBBTgwbP8hFIr/HRF6/xoPb/8aD27/Gg9u/xoP
        bv8aD27/Gg9u/xoPbv8aD27/Gg9u/xoPbv8aD27/Gg9u/xoPbv8aD27/Gg9u/xoPbv84MGz/AQEBBQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOzJ2/2dcuv+Hf8j/oJfr/6GY
        6v+jmuv/pJvr/6Sb6/+km+v/pJvr/6Sb6/+km+v/pJvr/6Sb6/+jmuv/oZjq/6CX6/+Yjun/HRB+/zsy
        dv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9NXv/eG7F/25j
        xf+Ac+T/gHTk/4B05P+AdOT/gHTk/4B05P+AdOT/gHTk/4B05P+AdOT/gHTk/4B05P+AdOT/gHPk/56V
        6v8eEYL/PTV7/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEE4
        gP97ccr/a1/F/3ls5P95bOT/eWzk/3ls5P95bOT/eWzk/3ls5P95bOT/eWzk/3ls5P95bOT/eWzk/3ls
        5P95bOT/nJLr/x8Rhv9BOID/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARDuG/31zzv9lWcL/cmTj/3Jk4/9yZOP/cmTj/3Jk4/9yZOP/cmTj/3Jk4/9yZOP/cmTj/3Jk
        4/9yZOP/cmTj/3Jk4/+Yjur/IBKM/0Q7hv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABIPYv/f3TS/15Swf9rXOP/a1zj/y0ax/8tGsf/LRrH/y0ax/8tGsf/LRrH/y0a
        x/8tGsf/LRrH/y0ax/9rXOP/a1zj/5OI6v8hE5D/SD2L/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEpAkf9/dNb/WEq//2NT4f9jU+H/LhrI/2NT4f9jU+H/Y1Ph/2NT
        4f9jU+H/Y1Ph/2NT4f9jU+H/LhrI/2NT4f9jU+H/kITq/yITlf9KQJH/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATkOW/4B12f9RQ77/XEvh/1xL4f8uGsn/XEvh/1xL
        4f9cS+H/XEvh/1xL4f9cS+H/XEvh/1xL4f8uGsn/XEvh/1xL4f+Lf+n/IxSa/05Dlv8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABRRpz/gXXd/0o7vP9VQ+H/VUPh/y4a
        yv9VQ+H/VUPh/1VD4f9VQ+H/VUPh/1VD4f9VQ+H/VUPh/y4ayv9VQ+H/VUPh/4Z66f8kFJ7/UUac/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRKof+CduD/QzS7/007
        4f9NO+H/LhrL/0074f9NO+H/TTvh/0074f9NO+H/TTvh/0074f9NO+H/LhrL/0074f9NO+H/gnTp/yUV
        o/9USqH/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWEyn/4N2
        5P88LLn/RzTh/0c04f8uGsz/RzTh/0c04f9HNOH/RzTh/0c04f9HNOH/RzTh/0c04f8uGsz/RzTh/0c0
        4f99b+r/Jhao/1hMp/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABcUK3/g3fn/zUltv8/K+D/Nya3/y8azf8/K+D/Pyvg/z8r4P8/K+D/Pyvg/z8r4P8/K+D/Pyvg/y8a
        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
        AD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD8=
</value>
  </data>
</root>